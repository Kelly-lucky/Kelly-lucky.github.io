<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>String的replace和replaceAll的区别妙用</title>
    <url>/2020/04/24/String%E7%9A%84replace%E5%92%8CreplaceAll%E7%9A%84%E5%8C%BA%E5%88%AB%E5%A6%99%E7%94%A8/</url>
    <content><![CDATA[<h2 id="String的replace和replaceAll的区别妙用"><a href="#String的replace和replaceAll的区别妙用" class="headerlink" title="String的replace和replaceAll的区别妙用"></a>String的replace和replaceAll的区别妙用</h2><p>相同点：都是全部替换，从左到右执行</p>
<p>主要不同点：</p>
<ul>
<li><p>repalce不支持正则表达式，仅支持字符的替换或字符串的替换；</p>
</li>
<li><p>replaceAll支持正则表达式，因此会对参数进行解析（两个参数均是），如果是符合正则的，会解析成正则再进行替换</p>
</li>
</ul>
<p>扩展：</p>
<ul>
<li>如果只想替换第一次出现的，可以使用replaceFirst()，该方法也基于规则表达式的替换</li>
</ul>
<p>举例：</p>
<ul>
<li>学习filter，案例：敏感词汇过滤，需求——有几个敏感词汇就替换成几个*</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//调用父类原有方法获取参数</span></span><br><span class="line">       String parameter = <span class="keyword">super</span>.getParameter(name);</span><br><span class="line">       <span class="comment">//判断是否包含敏感词汇，包含，将敏感词汇替换成同等数量的*</span></span><br><span class="line">       <span class="keyword">for</span> (String word : list) &#123;</span><br><span class="line">           <span class="keyword">if</span> (parameter.contains(word)) &#123;</span><br><span class="line">               String w = word.replaceAll(<span class="string">"."</span>, <span class="string">"*"</span>);</span><br><span class="line">               parameter = parameter.replace(word, w);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> parameter;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>搭建博客</title>
    <url>/2020/04/03/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="使用hexo-github-page搭建简易个人博客"><a href="#使用hexo-github-page搭建简易个人博客" class="headerlink" title="使用hexo+github page搭建简易个人博客"></a><center><strong>使用hexo+github page搭建简易个人博客</strong></center></h1><p>​        最近在学习java，想通过博客的方式记录一下学习中的问题或者思路，看到网上使用hexo+github page搭建的个人博客，就试着学一学搭建一个属于自己的个人博客。本文旨在提示搭建过程中遇到的问题，对具体过程会给出对应详细教程的连接，请自行查看。</p>
<h3 id="教程参考"><a href="#教程参考" class="headerlink" title="教程参考"></a>教程参考</h3><ul>
<li>两个很详细的搭建教程（对比照做基本没什么问题）<ul>
<li><a href="https://blog.csdn.net/grave2015/article/details/79961843" target="_blank" rel="noopener">https://blog.csdn.net/grave2015/article/details/79961843</a></li>
<li><a href="https://cuiqingcai.com/7625.html" target="_blank" rel="noopener">https://cuiqingcai.com/7625.html</a></li>
</ul>
</li>
</ul>
<h2 id="总结几个本人遇到但教程中没有提到的问题"><a href="#总结几个本人遇到但教程中没有提到的问题" class="headerlink" title="总结几个本人遇到但教程中没有提到的问题"></a>总结几个本人遇到但教程中没有提到的问题</h2><ul>
<li><p>Git Bash Here  安装 hexo 时提示  npm 找不到</p>
</li>
<li><p>默认应该安装node.js时会把npm和node.js的路径配置在Path中，但我的path中只有node.js，于是手动添加npm的路径（一般npm路径应该和node.js在一起，可以找一找npm.exe的路径填进path）</p>
</li>
<li><p>关于npm hexo时候-bash:hexo:command not found的问题</p>
<ul>
<li><p>执行安装hexo命令后，我的hexo文件全在node.js里面，没有配置到path中，根据教程在另外的Blog路径中执行hexo操作时就会找不到hexo</p>
</li>
<li><p>这是我遇到这个问题时看到网上的解决办法（不过我并没有这样做）[(<a href="http://www.lionber.com/2019/01/03/关于npm" target="_blank" rel="noopener">http://www.lionber.com/2019/01/03/关于npm</a> hexo时候-bash-hexo-command not found的问题/)](<a href="http://www.lionber.com/2019/01/03/关于npm" target="_blank" rel="noopener">http://www.lionber.com/2019/01/03/关于npm</a> hexo时候-bash-hexo-command not found的问题/)</p>
</li>
<li><p>我直接在node.js中node_modules中找到了hexo然后添加到了path中，可以用了- </p>
</li>
</ul>
</li>
<li><p>hexo deploy部署前要先修改_config.yml 文件，注意按照教程中地址复制过来可能会是https://的，但是教程中给的是在前面加git@的，前者会导致后面每次提交更改内容时都要输入用户名和密码，所以要按后面的来，自己手动修改一下即可</p>
</li>
<li><p>hexo g -d 命令可能会 ERROR Deployer not found: git ，虽然你可能已经执行过一次以下命令，但如果你的目标文件夹下没有  .git  文件，你仍然需要再次执行该命令</p>
<blockquote>
<p>npm install hexo-deployer-git <em>–save</em></p>
</blockquote>
</li>
<li><p>部署好之后可以通过链接访问博客，这时兴奋的你可能立即打开该链接却什么都没有，不要慌，前面操作没问题的情况下你需要等几分钟（我的电脑是大概两分钟），它接到你的部署再更新到博客是需要时间的（如果很久了还刷新不出来，一定是前面某步没操作好，重新部署即可）</p>
</li>
<li><p>配置站点信息，可能你和我一样写了中文，虽然指定了语言，但是这时任然可能网页中会出现乱码，因为配置文件的编码问题，用notepad++等转换一下编码为UTF-8，重新部署提交即可</p>
</li>
<li><p>最后一个问题——提交文章时 hexo d  报错问题：</p>
<ul>
<li><p>原因未知，可能是修改了_config.yml 文件的url导致的，改回去任然不行；按照网上的修改很多都无济于事，反而爆出了新错误</p>
</li>
<li><p>fatal: ‘ （这里是你在__config.yml中设置的ssh链接 ）  ‘ does not appear to be a git repository</p>
</li>
<li><p>fatal: unable to access ‘（这里是你在__config.yml中设置的ssh链接 ）’: Recv failure: Connection was reset</p>
</li>
<li><blockquote>
<p>Error: Spawn failed </p>
<p>at ChildProcess.<anonymous> (E:\Blog\hexo\node_modules\hexo-util\lib\spawn.js:51:21)</anonymous></p>
</blockquote>
</li>
<li><p>还有很多错误基本相似，不再一一列举</p>
</li>
<li><p>下面说一下我是怎么解决的：</p>
<ul>
<li><p>（说点废话）本来我认为以前已经配置好ssh并添加到github了，前面上传github或者更新文章都没问题，所以没有在意网上说重新配置Git的提议，但是在看了两个小时的解决方案后还没能解决该问题的状态下，我决定试一试，重新配置了ssh并关联到github，此时再hexo d又出现了新错</p>
<p><img src="https://kelly-lucky.oss-cn-beijing.aliyuncs.com/img/01.png" alt></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>  查找该错误是——远程终端意外挂断：</p>
<p>  一番查找后，终于看到帖子<a href="https://zimt8.com/questions/15240815/" target="_blank" rel="noopener">https://zimt8.com/questions/15240815/</a>介绍的解决该错误的方法，照做，解决了问题。</p>
<ul>
<li>关于解决图片上传问题，我用typora 0.9.84版本+PicGo+阿里云oss解决，挺方便</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>js执行顺序问题</title>
    <url>/2020/04/13/js%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="js执行顺序问题"><a href="#js执行顺序问题" class="headerlink" title="js执行顺序问题"></a>js执行顺序问题</h2><p>问题：</p>
<ul>
<li>学习js及jQuery，发现有时获取对象或获取对象的值等可以放在事件函数外，有时却并不能这么做，必须放在事件函数内，这使我很疑惑。</li>
</ul>
<p>原因：</p>
<ul>
<li>没有注意到代码执行顺序</li>
</ul>
<p>结论：</p>
<ul>
<li>js代码在页面加载时就开始执行了</li>
<li>如果是初始代码中就有的内容的获取，那随着页面加载它就存在了就能获取到，这种就不必写在事件函数内部</li>
<li>如果是通过加载js代码后来添加或者修改的，那页面的初始加载并不能获取这些，就必须写在事件函数内，随着事件操作加载出来再进行获取</li>
</ul>
]]></content>
  </entry>
</search>
